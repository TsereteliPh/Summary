{"version":3,"file":"form.min.js","sources":["form.js"],"sourcesContent":["/* ЛОГИКА ПОЛЕЙ ВВОДА */\r\n\r\nconst form = document.querySelector('.form');\r\nconst inputContainers = form.querySelectorAll('div');\r\nconst inputs = form.querySelectorAll('.input');\r\nconst phoneInput = form.querySelector('#phone');\r\nconst submitButton = form.querySelector('.send-panel__button--submit');\r\nconst resetButton = form.querySelector('.send-panel__button--reset');\r\nconst modalSuccess = document.querySelector('.modal--success');\r\nconst modalFailure = document.querySelector('.modal--failure');\r\nconst modalCloseButton = document.querySelectorAll('.modal__button');\r\n\r\nlet requireInputArr = [];\r\n\r\n//Функция проверки атрибута required у полей ввода\r\n\r\nconst requiredChecker = () => {\r\n    inputs.forEach((item) => {\r\n        if (item.hasAttribute('required')) {\r\n            item.parentElement.classList.add('required-input');\r\n            requireInputArr.push(item);\r\n        }\r\n    })\r\n}\r\n\r\n//Функция удаляющая все иконки у поля ввода\r\n\r\nconst iconCleaner = (n) => {\r\n    n.classList.remove('required-input', 'warning-input', 'correct-input');\r\n}\r\n\r\n//Функция автозаполнения поля ввода телефона\r\n\r\nconst phoneAutocomplete = () => {\r\n    phoneInput.onfocus = () => {\r\n        if (phoneInput.value === '') {\r\n            phoneInput.value = '+7';\r\n        }\r\n    }\r\n}\r\n\r\n//Функция проверки формата и содержания полей ввода \r\n\r\nconst validityChecker = () => {\r\n    inputs.forEach((input) => {\r\n        input.oninput = () => {\r\n            if (input.validity.typeMismatch || input.validity.patternMismatch) {\r\n                iconCleaner(input.parentElement);\r\n                input.parentElement.classList.add('warning-input');\r\n            } else if (input.value !== '' && !input.validity.typeMismatch && !input.validity.patternMismatch){\r\n                iconCleaner(input.parentElement);\r\n                input.parentElement.classList.add('correct-input');\r\n            } else {\r\n                iconCleaner(input.parentElement);\r\n                requiredChecker();\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n//Функция проверки каждого инпута на соответсвие требованиям (для отправки формы)\r\n\r\nconst inputSubmitChecker = () => {\r\n    for (input of inputs) {\r\n        if (input.validity.typeMismatch || input.validity.patternMismatch) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (input of requireInputArr) {\r\n        if (input.value === '') {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n//Функция отмены введенных значений\r\n\r\nconst resetForm = () => {\r\n    inputs.forEach((input) => {\r\n        input.value = '';\r\n        iconCleaner(input.parentElement);\r\n    })\r\n    requiredChecker();\r\n}\r\n\r\n//Вызов всех функций\r\n\r\nphoneAutocomplete();\r\nrequiredChecker();\r\nvalidityChecker();\r\n\r\n//Кнопка отмены ввода\r\n\r\nresetButton.addEventListener('click', () => {\r\n    resetForm(form);\r\n})\r\n\r\n//Кнопка закрытия модального окна\r\n\r\nmodalCloseButton.forEach((button) => {\r\n    button.addEventListener('click', () => {\r\n    modalSuccess.classList.remove('modal--active');\r\n    modalFailure.classList.remove('modal--active');\r\n    document.body.style.overflow = 'visible';\r\n    })\r\n})\r\n\r\n/* Скрипт для отправки сообщения */\r\n\r\nconst token = '5683729746:AAGC6h_EiKOBbxzHQjOjzCjjuxe41VwFp08';\r\nconst chatId = '-1001546624725';\r\nconst URI_API = ` https://api.telegram.org/bot${ token }/sendMessage`;\r\n\r\nform.addEventListener('submit', function(evt) {\r\n    evt.preventDefault();\r\n\r\n    let formMessage = `<b>Отклик с сайта!</b>\\n <b>Отправитель: </b> ${ this.name.value }\\n <b>Компания: </b> ${ this.company_name.value }\\n <b>Email: </b> ${ this.email.value }\\n <b>Телефон: </b> ${ this.phone.value }\\n <b>Дополнительная информация: </b> ${ this.message.value }\\n`;\r\n    \r\n    if (inputSubmitChecker()) {\r\n        axios.post(URI_API, {\r\n            chat_id: chatId,\r\n            text: formMessage,\r\n            parse_mode: 'html'\r\n        });\r\n\r\n        resetForm(form);\r\n\r\n        modalSuccess.classList.add('modal--active');\r\n        document.body.style.overflow = 'hidden';\r\n    } else {\r\n        modalFailure.classList.add('modal--active');\r\n        document.body.style.overflow = 'hidden';\r\n    }\r\n})"],"names":["form","document","querySelector","inputContainers","querySelectorAll","inputs","phoneInput","submitButton","resetButton","modalSuccess","modalFailure","modalCloseButton","let","requireInputArr","requiredChecker","forEach","item","hasAttribute","parentElement","classList","add","push","iconCleaner","n","remove","phoneAutocomplete","onfocus","value","validityChecker","input","oninput","validity","typeMismatch","patternMismatch","inputSubmitChecker","resetForm","token","addEventListener","button","body","style","overflow","chatId","URI_API","evt","preventDefault","formMessage","this","name","company_name","email","phone","message","axios","post","chat_id","text","parse_mode"],"mappings":"AAEA,MAAMA,KAAOC,SAASC,cAAc,OAAO,EACrCC,gBAAkBH,KAAKI,iBAAiB,KAAK,EAC7CC,OAASL,KAAKI,iBAAiB,QAAQ,EACvCE,WAAaN,KAAKE,cAAc,QAAQ,EACxCK,aAAeP,KAAKE,cAAc,6BAA6B,EAC/DM,YAAcR,KAAKE,cAAc,4BAA4B,EAC7DO,aAAeR,SAASC,cAAc,iBAAiB,EACvDQ,aAAeT,SAASC,cAAc,iBAAiB,EACvDS,iBAAmBV,SAASG,iBAAiB,gBAAgB,EAEnEQ,IAAIC,gBAAkB,GAItB,MAAMC,gBAAkB,KACpBT,OAAOU,QAAQ,IACPC,EAAKC,aAAa,UAAU,IAC5BD,EAAKE,cAAcC,UAAUC,IAAI,gBAAgB,EACjDP,gBAAgBQ,KAAKL,CAAI,EAEjC,CAAC,CACL,EAIMM,YAAc,IAChBC,EAAEJ,UAAUK,OAAO,iBAAkB,gBAAiB,eAAe,CACzE,EAIMC,kBAAoB,KACtBnB,WAAWoB,QAAU,KACQ,KAArBpB,WAAWqB,QACXrB,WAAWqB,MAAQ,KAE3B,CACJ,EAIMC,gBAAkB,KACpBvB,OAAOU,QAAQ,IACXc,EAAMC,QAAU,KACRD,EAAME,SAASC,cAAgBH,EAAME,SAASE,iBAC9CX,YAAYO,EAAMX,aAAa,EAC/BW,EAAMX,cAAcC,UAAUC,IAAI,eAAe,GAC1B,KAAhBS,EAAMF,OAAiBE,EAAME,SAASC,cAAiBH,EAAME,SAASE,iBAI7EX,YAAYO,EAAMX,aAAa,EAC/BJ,gBAAgB,IAJhBQ,YAAYO,EAAMX,aAAa,EAC/BW,EAAMX,cAAcC,UAAUC,IAAI,eAAe,EAKzD,CACJ,CAAC,CACL,EAIMc,mBAAqB,KACvB,IAAKL,SAASxB,OACV,GAAIwB,MAAME,SAASC,cAAgBH,MAAME,SAASE,gBAC9C,MAAO,CAAA,EAIf,IAAKJ,SAAShB,gBACV,GAAoB,KAAhBgB,MAAMF,MACN,MAAO,CAAA,EAIf,MAAO,CAAA,CACX,EAIMQ,UAAY,KACd9B,OAAOU,QAAQ,IACXc,EAAMF,MAAQ,GACdL,YAAYO,EAAMX,aAAa,CACnC,CAAC,EACDJ,gBAAgB,CACpB,EA0BMsB,OAtBNX,kBAAkB,EAClBX,gBAAgB,EAChBc,gBAAgB,EAIhBpB,YAAY6B,iBAAiB,QAAS,KAClCF,UAAUnC,IAAI,CAClB,CAAC,EAIDW,iBAAiBI,QAAQ,IACrBuB,EAAOD,iBAAiB,QAAS,KACjC5B,aAAaU,UAAUK,OAAO,eAAe,EAC7Cd,aAAaS,UAAUK,OAAO,eAAe,EAC7CvB,SAASsC,KAAKC,MAAMC,SAAW,SAC/B,CAAC,CACL,CAAC,EAIa,kDACRC,OAAS,iBACTC,wCAA2CP,oBAEjDpC,KAAKqC,iBAAiB,SAAU,SAASO,GACrCA,EAAIC,eAAe,EAEfC;wBAAgEC,KAAKC,KAAKrB;qBAA+BoB,KAAKE,aAAatB;kBAA4BoB,KAAKG,MAAMvB;oBAA8BoB,KAAKI,MAAMxB;sCAAgDoB,KAAKK,QAAQzB;GAExQO,mBAAmB,GACnBmB,MAAMC,KAAKX,QAAS,CAChBY,QAASb,OACTc,KAAMV,EACNW,WAAY,MAChB,CAAC,EAEDtB,UAAUnC,IAAI,EAEdS,cAGAC,cAHaS,UAAUC,IAAI,eAAe,EAC1CnB,SAASsC,KAAKC,MAAMC,SAAW,QAKvC,CAAC"}